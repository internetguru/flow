name: Makefile CI

on:
  push:
    tags:
      - "v*"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install requirements
      run: sudo apt install -y python3-docutils

    - name: configure
      run: ./configure

    - name: Make dist
      run: make dist

    - name: Make distsingle
      run: make distsingle

    - name: Retrieve changes
      run: |
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        echo "JSON_RESPONSE<<$EOF" >> "$GITHUB_ENV"
        ./scripts/changelog-latest CHANGELOG.md >> "$GITHUB_ENV"
        curl https://example.com >> "$GITHUB_ENV"
        echo "$EOF" >> "$GITHUB_ENV"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: ${{ env.CHANGES }}
        draft: false
        prerelease: false

    - name: Get Name of Artifact
      run: |
        ARTIFACT_1_PATHNAME=$(ls *.tar.gz | head -n 1)
        ARTIFACT_2_PATHNAME=$(ls *.sh | head -n 1)
        echo ::set-env name=ARTIFACT_1_PATHNAME::${ARTIFACT_1_PATHNAME}
        echo ::set-env name=ARTIFACT_2_PATHNAME::${ARTIFACT_2_PATHNAME}

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.ARTIFACT_1_PATHNAME }}
        asset_name: flow.tar.gz
        asset_content_type: application/gzip

    - name: Upload Second Release Asset
      id: upload-release-asset-2
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.ARTIFACT_2_PATHNAME }}
        asset_name: flow.sh
        asset_content_type: application/x-sh

